# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.9.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: lein with-profile +test-common,+test-web,+dev deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

  test_current:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.9.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: bin/install-chrome
      - run: bin/install-clojure
      - run: bin/install-bb
      - run: sudo bin/install-node && npm install
      - run: lein check
      - run:
          name: 'Check artifact isolation + lack of reflection/boxing warnings'
          # skip the first warning, which I believe is in leiningen itself
          command: lein with-profile -dev,+check check 2>&1 | grep -v "form-init.*clj" | bin/check-for-warnings.sh
      - run: TEST_CHECK_FACTOR=20 lein with-profile test-common test
      - run: lein clean
      - run: lein with-profile test-web cljsbuild once test 2> >(tee -a stderr.log >&2)
      - run: cat stderr.log | grep -v "Options passed to ClojureScript compiler" | bin/check-for-warnings.sh
      - run: bin/tests
      - run: bb bin/bb_ex.clj 2> >(tee -a stderr2.log >&2)
      - run: cat stderr2.log | bin/check-for-warnings.sh
      - run: bb bin/bb_test.clj
      - run: bin/golden_master_test.sh
      - run: bin/deps_test.sh
      - run: bin/build_comparison_doc.sh
      - run: git diff --exit-code -- doc/comparison.md # make sure above step does not modify examples
      - run: lein jar && diff -u <(jar tf target/*.jar | sort) <(cat expected-jar-contents.txt | sort)

  test_cljs_old:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.9.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: bin/install-chrome
      - run: bin/install-clojure
      - run: sudo bin/install-node && npm install
      # The version number (1.10.439) is important - it's the last version in which CLJS itself
      # did NOT include 'goog.string.format' so it's the last version that will reproduce https://github.com/bhb/expound/issues/183
      - run: clojure -Sdeps '{:deps {org.clojure/clojurescript {:mvn/version "1.10.439"}}}' -m cljs.main -re node -i test/cljs_test.cljs
      - run: lein clean && lein with-profile test-web,clj-1.9.0,cljs-1.10.238,orch-2020.07.12-1 cljsbuild once test && bin/tests
      - run: lein clean && lein with-profile test-web,clj-1.9.0,cljs-1.10.339,orch-2020.07.12-1 cljsbuild once test && bin/tests
      - run: lein clean && lein with-profile test-web,clj-1.10.0,cljs-1.10.439,orch-2020.07.12-1 cljsbuild once test && bin/tests
      - run: lein clean && lein with-profile test-web,clj-1.10.0,cljs-1.10.516 cljsbuild once test && bin/tests
      - run: lein clean && lein with-profile test-web,orch-2019.02.06-1 cljsbuild once test && bin/tests

  test_clj_old:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.9.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: lein with-profile test-common,clj-1.9.0,spec-0.2.168 test
      - run: lein with-profile test-common,clj-1.10.0,spec-0.2.176 test
      - run: lein with-profile test-common,clj-1.10.0,orch-2019.02.06-1 test

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - test_current:
          requires:
            - build
      - test_cljs_old:
          requires:
            - build
      - test_clj_old:
          requires:
            - build
